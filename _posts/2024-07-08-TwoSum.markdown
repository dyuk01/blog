---
layout: post
title: Two Sum
date: 2024-07-08
categories: leetcode python
---

## Problem
![alt text](/blog/public/img/TwoSum.png)

## Approach

## Code
```python
class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        # Hashmap to store number and its index
        res = {}

        for i in range(len(nums)):
            # If num1 + num2 = target exists,
            if target - nums[i] in res:
                # Return its index
                return [res[target - nums[i]], i]
            # If not, store the index into the hashmap
            res[nums[i]] = i
        # Since the problem guarantees there is an answer, return a placeholder
        return []
        
```
## Time Complexity
O(n)
> Iterates through the array exactly once in order to find the two sum

## Space Complexity
O(n)
> As input size increases, the amount of integers that the hashmap needs to store increases as well

---